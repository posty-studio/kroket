@function get-utility($group, $key) {
  $utility: map-get(map-get($kroket-config, 'utilities'), $group);
  $items: map-get($utility, 'items');
  $item-value: map-get($items, $key);

  @if ($item-value) {
    @return $item-value;
  } @else {
    @warn #{'Value: ‘' + $key + '’ doesn’t exist in ‘' + $group + '’' };
  }
}

@mixin apply-utility($group, $key) {
  $utility: map-get(map-get($kroket-config, 'utilities'), $group);
  $property: map-get($utility, 'property');
  $items: map-get($utility, 'items');
  $item-value: map-get($items, $value-key);

  @if ($property and $item-value) {
    #{ $property }: #{$item-value};
  } @else {
    @if ($property) {
      @warn #{'Value: ‘' + $key + '’ doesn’t exist in ‘' + $group + '’' };
    }

    @if ($item-value) {
      @warn #{ 'Utility ‘' + $key + '’ doesn’t exist' };
    }
  }
}

@mixin media-query($key) {
  $breakpoints: map-get($kroket-config, 'breakpoints');
  $matched-breakpoint: map-get($breakpoints, $key);

  @if not $matched-breakpoint {
    @warn #{ 'Breakpoint, ‘' + $key + '’ not found in `$kroket-config`. Make sure it’s set in the ‘breakpoints’ section of your Kroket config file.' };
  } @else {
    @media #{ $matched-breakpoint } {
      @content;
    }
  }
}
